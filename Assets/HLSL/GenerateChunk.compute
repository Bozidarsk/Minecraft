// #pragma kernel ShapePass
// #pragma kernel EdgeBlockPass
// #pragma kernel FoliagePass

// // #define AIR_BLOCK ((min16uint[]) { 0x0000 })
// struct StringStruct { min16uint id[51]; };
// struct ChunkGenerationSettings 
// {
// 	uint voxelTypesLength;
// };

// RWStructuredBuffer<StringStruct> voxelIds;
// RWStructuredBuffer<min16uint> voxelTypes;
// ChunkGenerationSettings settings;

// uint GetVoxelTypeById(const min16uint id[51]) 
// {
// 	for (uint i = 0; i < settings.voxelTypesLength; i++) 
// 	{
// 		uint t = 0;
// 		for (t = 0; id[t] == voxelIds[i].id[t] && id[t] != 0x0000 && voxelIds[i].id[t] != 0x0000; i++) {}
// 		if (id[t] == voxelIds[i].id[t] && id[t] == 0x0000) { return i; }
// 	}

// 	// return GetVoxelTypeById(AIR_BLOCK);
// 	return GetVoxelTypeById({ 0x0000 });
// }

// [numthreads(1, 1, 1)]
// void ShapePass (uint3 position : SV_DispatchThreadID)
// {

// }

// [numthreads(1, 1, 1)]
// void EdgeBlockPass (uint3 position : SV_DispatchThreadID)
// {
	
// }

// [numthreads(1, 1, 1)]
// void FoliagePass (uint3 position : SV_DispatchThreadID)
// {
	
// }